commandDispatcher.register(
  (LiteralArgumentBuilder)(
    (LiteralArgumentBuilder)Commands.literal("tag").requires(commandSourceStack -> commandSourceStack.hasPermission(2))
    )
    .then(
      (
        (Commands.argument("targets", EntityArgument.entities())
          .then(Commands.literal("add")
            .then(Commands.argument("name", StringArgumentType.word())
              .executes(
                commandContext -> TagCommand.addTag(
                  (CommandSourceStack)commandContext.getSource(), EntityArgument.getEntities((CommandContext<CommandSourceStack>)commandContext, "targets"), StringArgumentType.getString((CommandContext)commandContext, (String)"name")
                )
              )
            )
          )
        )
        .then(Commands.literal("remove")
          .then(
            Commands.argument("name", StringArgumentType.word())
            .suggests((commandContext, suggestionsBuilder) -> SharedSuggestionProvider.suggest(TagCommand.getTags(EntityArgument.getEntities((CommandContext<CommandSourceStack>)commandContext, "targets")), suggestionsBuilder))
            .executes(commandContext -> TagCommand.removeTag((CommandSourceStack)commandContext.getSource(), EntityArgument.getEntities((CommandContext<CommandSourceStack>)commandContext, "targets"), StringArgumentType.getString((CommandContext)commandContext, (String)"name"))
            )
          )
        )
      )
      .then(
        Commands.literal("list").executes(commandContext -> TagCommand.listTags((CommandSourceStack)commandContext.getSource(), EntityArgument.getEntities((CommandContext<CommandSourceStack>)commandContext, "targets")))
      )
    )
  );
